var CHANNEL = '__xrt__';

var RedisAdapter = function(args){
  this.args = args;
  this.callback = {};
  this.id = new Date().getTime()+Math.random();
}

RedisAdapter.prototype = {
  attach: function(fn){
    if ( this.client ) {
      throw new Error('Already attached!');
    }
    this.client = require("redis").createClient(this.args);
    // this.client.on('ready', function(err){
    //
    // }.bind(this));
    this.client.on('message', this._handleMessage.bind(this));
    this.client.on('error', this._handleError.bind(this));
    this.client.subscribe(CHANNEL);
    this.emitClient = require("redis").createClient(this.args);
    fn && fn(null, this);
  },

  emit: function(event, args, fn){
    var msg = {
      from: this.id,
      event: event,
      args: args
    };
    this.emitClient.publish(CHANNEL, JSON.stringify(msg), fn);
  },

  on: function(key, fn){
    this.callback[key] = fn;
  },

  _handleMessage: function(channel, message){
    var msg = JSON.parse(message);
    var fn = this.callback[msg.event];
    fn && fn(msg.args);
  },

  _handleError: function(err){
    console.error(err);
  },

  detach: function(fn){
    if ( this.client ) {
      this.client.unsubscribe(CHANNEL);
      this.client.end();
      this.client = null;
    }
    if ( this.emitClient ) {
      this.emitClient.end();
      this.emitClient = null;
    }
    fn && fn(null, this);
  }
};

module.exports = RedisAdapter;
