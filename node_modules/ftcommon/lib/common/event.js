var EventProxy = require('eventproxy');
var Proxy = function(){
	this.handle = new EventProxy();
};
Proxy.prototype = {
	on: function() {
		this.handle.on.apply(this.handle, arguments);
	},
	off: function() {
		this.handle.removeListener.apply(this.handle, arguments);
	},
	emit: function() {
		this.handle.emit.apply(this.handle, arguments);
	},
	emitLater: function() {
		this.handle.emitLater.apply(this.handle, arguments);
	},
	'throw': function(){
		this.handle['throw'].apply(this.handle, arguments);
	},
	'catch': function(){
		this.handle.fail.apply(this.handle, arguments);
	},
	all: function(array, handle, callback) {
		var ep = new EventProxy();
		var name = 'allDone';
		ep.fail(function(err) {
			callback(err);
			ep.removeAllListeners();
		});
		ep.after(name, array.length, function(results){
			callback(null, results);
			ep.removeAllListeners();
		});
		array.forEach(function(item){
			handle(item, ep.group(name));
		});
		return ep;
	}
};
module.exports = new Proxy();

