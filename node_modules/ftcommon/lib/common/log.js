var util = require('util');
var os = require('os');
var format = function(msg) {
    var ret = '';
    if (!msg) {
        return ret;
    }
    var date = new Date();
    var time = date.format('yyyy-MM-dd hh:mm:ss.S');
    if (msg instanceof Error) {
        var err = {
            name: msg.name,
            data: msg.data
        };
        err.stack = msg.stack;
        ret = util.format('%s %s: %s\nHost: %s\nData: %j\n%s\n\n',
            time, err.name, err.stack, os.hostname(), err.data, time);
        //console.log(ret);
    } else {
        ret = time + ' ' + util.format.apply(util, arguments) + '\n';
    }
    return ret;
};

exports.error = function(msg){
	var errLog = format(msg);
	console.error(errLog);
};

exports.httpError = function(err, req, res) {
	var status = 'not set';
	if ( err instanceof Error ) {
		status = err&&err.status? err.status : 'error';
	}
	var msg;
  if ( status == 404 ) msg = util.format('HTTP Error: %s\tPath: %s\tRefer: %s', status, req.path, req.headers?req.headers['Referer']:'');
  else msg = util.format('HTTP Error: %s\tPath: %s\tOriginalUrl: %s', status, req.path, req.originalUrl);
	if ( err && status != 404 ) msg += '\n' + format(err);
	console.error(msg);
};
