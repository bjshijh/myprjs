var lang = require('../common/lang');
var mysql = function(args){
	lang.mixin(this, args);
};

mysql.prototype.connect = function(fn) {
	fn(null);
};

mysql.prototype.shutdown = function(fn) {
	if ( this.client && lang.isFunction(this.client.end) ) {
		this.client.end(fn);
	}
	else if ( this.client && lang.isFunction(this.client.destroy) ) {
		this.client.destroy();
	}
	else {
		fn(null);
	}
};

mysql.prototype.execute = function() {
	var len = arguments.length;
	var fn = arguments[len-1];
	var args = [];
	for(var i = 0; i < len; ++ i ) {
		args[i] = arguments[i];
	}
	if ( lang.isFunction(fn) ) {
		args[len-1] = function(err, rows, fields) {
			fn(err, {rows: rows});
		}
	}
	if ( args.length == 4 ) {
		args.splice(2, 1); // remove cassandra options
	}
	return this.client.query.apply(this.client, args);
};

mysql.prototype.fixUpdateOnInsert = function(query) {
	var sql = query.replace(/^insert/gi, 'replace');
	return sql;
};

module.exports = mysql;
